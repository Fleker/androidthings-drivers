/**
 * To publish a driver to Maven local:
 *     ./gradlew -PPUBLISHING [driver_name]:clean [driver_name]:publishToMavenLocal
 *
 *  To publish a driver to Bintray:
 *     Set environmental variables BINTRAY_USER and BINTRAY_API_KEY to proper values and run
 *     ./gradlew -PPUBLISHING [driver_name]:clean [driver_name]:bintrayUpload
 *
 * Additionally, add the -PSNAPSHOT flag to replace artifact version names with "SNAPSHOT". Note
 * that bintrayUpload tasks will not upload the artifact if this flag is used.
 */

allprojects {
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'
}

String publicationName = 'driverPublish'
boolean snapshot = hasProperty "SNAPSHOT"

subprojects {
    if (!project.findProperty("ARTIFACT_VERSION")) {
        return
    }

    apply plugin: 'com.android.library'

    task sourceJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    def artifactVersion = snapshot ? "LATEST" : ARTIFACT_VERSION

    publishing.publications {
            "$publicationName"(MavenPublication) {
                groupId 'com.rosterloh.things'
                artifactId "driver-$project.name"
                version artifactVersion
                artifact sourceJar
                artifact("$buildDir/outputs/aar/$project.name-release.aar")
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.compile.allDependencies.each {
                        if (it.group != null
                                && it.name != null && !"unspecified".equals(it.name)
                                && it.version != null && !"unspecified".equals(it.version)) {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
    }

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_API_KEY')
        publications = [publicationName]

        publish = true
        dryRun = snapshot

        pkg {
            repo = 'rosterloh'
            name = "androidthings-driver-$project.name"
            licenses = ['MIT']
            websiteUrl = 'https://github.com/rosterloh/androidthings-drivers'
            vcsUrl = 'https://github.com/rosterloh/androidthings-drivers.git'
            githubRepo = 'rosterloh/androidthings-drivers'
            githubReleaseNotesFile = 'README.md'

            version {
                name = artifactVersion
                desc = TYPE
                released = new Date()
                gpg {
                    sign = true
                }
            }
        }
    }

    afterEvaluate {
        tasks.withType(PublishToMavenRepository).all { publishTask ->
            publishTask.dependsOn build
        }
        tasks.withType(PublishToMavenLocal).all { publishTask ->
            publishTask.dependsOn build
        }
    }
}