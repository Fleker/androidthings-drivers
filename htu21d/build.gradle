apply plugin: 'com.android.library'
apply plugin: 'jacoco'

def versionMajor = 0
def versionMinor = 1

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 10 + versionMinor
        versionName "${versionMajor}.${versionMinor}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

jacoco {
    toolVersion = "0.7.9"
}

dependencies {
    implementation 'com.google.android.things:androidthings:' + rootProject.androidThingsVersion
    implementation 'com.android.support:support-annotations:' + rootProject.supportLibVersion
    testImplementation 'junit:junit:' + rootProject.jUnitVersion
    testImplementation 'org.hamcrest:hamcrest-library:' + rootProject.hamcrestVersion
    testImplementation 'org.mockito:mockito-core:' + rootProject.mockitoVersion
    androidTestImplementation 'com.android.support:support-annotations:' + rootProject.supportLibVersion
}
